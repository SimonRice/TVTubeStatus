//
// Leg.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class Leg: JSONEncodable {

    public var duration: Int32?
    public var speed: String?
    /** Describes the action the user need to take for this section, E.g. \&quot;walk to the              district line\&quot; */
    public var instruction: Instruction?
    public var obstacles: [Obstacle]?
    public var departureTime: Date?
    public var arrivalTime: Date?
    public var departurePoint: Point?
    public var arrivalPoint: Point?
    public var path: Path?
    public var routeOptions: [RouteOption]?
    public var mode: Identifier?
    public var disruptions: [Disruption]?
    public var plannedWorks: [PlannedWork]?
    public var distance: Double?
    public var isDisrupted: Bool?
    public var hasFixedLocations: Bool?

    public init() {}

    // MARK: JSONEncodable
    open func encodeToJSON() -> Any {
        var nillableDictionary = [String:Any?]()
        nillableDictionary["duration"] = self.duration?.encodeToJSON()
        nillableDictionary["speed"] = self.speed
        nillableDictionary["instruction"] = self.instruction?.encodeToJSON()
        nillableDictionary["obstacles"] = self.obstacles?.encodeToJSON()
        nillableDictionary["departureTime"] = self.departureTime?.encodeToJSON()
        nillableDictionary["arrivalTime"] = self.arrivalTime?.encodeToJSON()
        nillableDictionary["departurePoint"] = self.departurePoint?.encodeToJSON()
        nillableDictionary["arrivalPoint"] = self.arrivalPoint?.encodeToJSON()
        nillableDictionary["path"] = self.path?.encodeToJSON()
        nillableDictionary["routeOptions"] = self.routeOptions?.encodeToJSON()
        nillableDictionary["mode"] = self.mode?.encodeToJSON()
        nillableDictionary["disruptions"] = self.disruptions?.encodeToJSON()
        nillableDictionary["plannedWorks"] = self.plannedWorks?.encodeToJSON()
        nillableDictionary["distance"] = self.distance
        nillableDictionary["isDisrupted"] = self.isDisrupted
        nillableDictionary["hasFixedLocations"] = self.hasFixedLocations

        let dictionary: [String:Any] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary
    }
}
