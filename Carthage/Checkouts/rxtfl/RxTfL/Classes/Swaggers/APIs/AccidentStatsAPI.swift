//
// AccidentStatsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import RxSwift



open class AccidentStatsAPI: APIBase {
    /**
     Gets all accident details for accidents occuring in the specified year
     
     - parameter year: (path) The year for which to filter the accidents on. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func accidentStatsGet(year: Int32, completion: @escaping ((_ data: [AccidentDetail]?,_ error: Error?) -> Void)) {
        accidentStatsGetWithRequestBuilder(year: year).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }

    /**
     Gets all accident details for accidents occuring in the specified year
     
     - parameter year: (path) The year for which to filter the accidents on. 
     - returns: Observable<[AccidentDetail]>
     */
    open class func accidentStatsGet(year: Int32) -> Observable<[AccidentDetail]> {
        return Observable.create { observer -> Disposable in
            accidentStatsGet(year: year) { data, error in
                if let error = error {
                    observer.on(.error(error as Error))
                } else {
                    observer.on(.next(data!))
                }
                observer.on(.completed)
            }
            return Disposables.create()
        }
    }

    /**
     Gets all accident details for accidents occuring in the specified year
     - GET /AccidentStats/{year}
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "severity" : "aeiou",
  "vehicles" : [ {
    "type" : "aeiou"
  } ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "location" : "aeiou",
  "id" : 123,
  "borough" : "aeiou",
  "casualties" : [ {
    "severity" : "aeiou",
    "mode" : "aeiou",
    "ageBand" : "aeiou",
    "class" : "aeiou",
    "age" : 123
  } ],
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <lat>3.149</lat>
  <lon>3.149</lon>
  <location>aeiou</location>
  <date>2000-01-23T04:56:07.000Z</date>
  <severity>aeiou</severity>
  <borough>aeiou</borough>
</null>}]
     - examples: [{contentType=application/json, example=[ {
  "date" : "2000-01-23T04:56:07.000+00:00",
  "severity" : "aeiou",
  "vehicles" : [ {
    "type" : "aeiou"
  } ],
  "lon" : 1.3579000000000001069366817318950779736042022705078125,
  "location" : "aeiou",
  "id" : 123,
  "borough" : "aeiou",
  "casualties" : [ {
    "severity" : "aeiou",
    "mode" : "aeiou",
    "ageBand" : "aeiou",
    "class" : "aeiou",
    "age" : 123
  } ],
  "lat" : 1.3579000000000001069366817318950779736042022705078125
} ]}, {contentType=application/xml, example=<null>
  <id>123</id>
  <lat>3.149</lat>
  <lon>3.149</lon>
  <location>aeiou</location>
  <date>2000-01-23T04:56:07.000Z</date>
  <severity>aeiou</severity>
  <borough>aeiou</borough>
</null>}]
     
     - parameter year: (path) The year for which to filter the accidents on. 

     - returns: RequestBuilder<[AccidentDetail]> 
     */
    open class func accidentStatsGetWithRequestBuilder(year: Int32) -> RequestBuilder<[AccidentDetail]> {
        var path = "/AccidentStats/{year}"
        path = path.replacingOccurrences(of: "{year}", with: year.asParameter, options: .literal, range: nil)
        let URLString = RxTfLAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[AccidentDetail]>.Type = RxTfLAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
